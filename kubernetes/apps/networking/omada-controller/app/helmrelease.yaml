---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app omada-controller
  namespace: networking
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

    image:
      repository: mbentley/omada-controller
      tag: 5.9

    env:
      # TZ: ${TIMEZONE}
      TZ: Europe/Amsterdam
      # PUID: 508
      # PGID: 508
      SHOW_SERVER_LOGS: true
      SHOW_MONGODB_LOGS: false
      # SSL_CERT_NAME: tls.crt
      # SSL_KEY_NAME: tls.key

    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Local
        annotations:
          metallb.universe.tf/loadBalancerIPs: ${LB_OMADA_CONTROLLER}

        ports:
          http:
            port: &port 8088
          manage-https:
            enabled: true
            port: 8043
            protocol: HTTPS
          portal-https:
            enabled: true
            port: 8843
            protocol: HTTPS
          app-discovery:
            enabled: true
            port: 27001
            protocol: UDP
          adopt-v1:
            enabled: true
            port: 29812
            protocol: TCP
          upgrade-v1:
            enabled: true
            port: 29813
            protocol: TCP
          manager-v1:
            enabled: true
            port: 29811
            protocol: TCP
          manager-v2:
            enabled: true
            port: 29814
            protocol: TCP
          discovery:
            enabled: true
            port: 29810
            protocol: UDP

    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /ping
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          # nginx.ingress.kubernetes.io/configuration-snippet: |
          #   proxy_set_header Accept-Encoding "";
          #   sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="http://theme-park.${SECRET_INTERNAL_DOMAIN}/css/base/sonarr/nord.css"></head>';
          #   sub_filter_once on;
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hajimari.io/enable: "true"
          hajimari.io/icon: mdi:table-network
          hajimari.io/targetBlank: "true"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_INTERNAL_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        # tls:
        #   - hosts:
        #       - *host

    volumeClaimTemplates:
      - name: data
        mountPath: /opt/tplink/EAPController/data
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: ceph-block
      - name: logs
        mountPath: /opt/tplink/EAPController/logs
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: ceph-block

    # persistence:
    #   # config:
    #   #   enabled: true
    #   #   existingClaim: sonarr-config-v1
    #   media:
    #     enabled: true
    #     # type: nfs
    #     # server: ${NAS_IP}
    #     # path: /volume1/media
    #     existingClaim: nfs-media-pvc
    #     mountPath: /media

    # resources:
    #   requests:
    #     cpu: 10m
    #     memory: 250Mi
    #   limits:
    #     # cpu: 476m
    #     memory: 2000Mi
