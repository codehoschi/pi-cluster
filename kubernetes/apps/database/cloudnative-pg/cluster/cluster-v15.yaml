---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres-v15-v2
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:15.5
  primaryUpdateStrategy: unsupervised
  storage:
    size: 20Gi
    storageClass: local-path
  superuserSecret:
    name: cloudnative-pg-secret
  enableSuperuserAccess: true

  postgresql:
    parameters:
      max_connections: "600"
      max_slot_wal_keep_size: 10GB
      shared_buffers: 512MB

  # resources:
  #   requests:
  #     memory: "2Gi"
  #     cpu: "500m"
  #   limits:
  #     memory: "4Gi"

  monitoring:
    enablePodMonitor: true

  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      # data:
      #   compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://postgresql/
      endpointURL: http://${NAS_IP}:9000
      # for recovery change the name to be not the same as the externalCluster name
      serverName: &currentCluster postgres-v15-v4
      # serverName: postgres-v16-v2
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: aws-access-key-id
        secretAccessKey:
          name: cloudnative-pg-secret
          key: aws-secret-access-key

  bootstrap:
    # # use this to recover a net-new cluster from a backup
    recovery:
      source: &previousCluster postgres-v15-v2
      # source: postgres-v16-v1
      recoveryTarget:
        # Time base target for the recovery
        targetTime: "2023-11-19 12:00:00.00000+02"

    # # use this to 'migrate' from an existing cnpg cluster (e.g. "postgres-v15-v2") to the new cluster
    # initdb:
    #   import:
    #     type: monolith
    #     databases:
    #       - "*"
    #     roles:
    #       - "*"
    #     source:
    #       externalCluster: postgres-v15-v2

  externalClusters:
    # this represents the s3 backup to restore from. *nota-bene: the backup must be the same major version of the target cluster
    - name: *previousCluster
    # - name: postgres-v16-v1
      barmanObjectStore:
        wal:
          compression: bzip2
          maxParallel: 8
        destinationPath: s3://postgresql/
        endpointURL: http://${NAS_IP}:9000
        s3Credentials:
          accessKeyId:
            name: cloudnative-pg-secret
            key: aws-access-key-id
          secretAccessKey:
            name: cloudnative-pg-secret
            key: aws-secret-access-key

    # # # this represents an existing cnpg cluster to migrate from (e.g. upgrading from postgres v14 to postgres v15)
    # - name: postgres-v15-v2
    #   connectionParameters:
    #     host: postgres-v15-v2-rw.database.svc.cluster.local
    #     user: postgres
    #     dbname: postgres
    #     sslmode: require
    #   password:
    #     name: cloudnative-pg-secret
    #     key: password
