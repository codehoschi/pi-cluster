---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: home-automation
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"

        # initContainers:
        #   init-db:
        #     image:
        #       repository: ghcr.io/codehoschi/postgres-init
        #       tag: 15.4@sha256:17620a5e514c4518ac25f75915afa45a82361bce2f945bdadac7f1c33f82db91
        #       pullPolicy: IfNotPresent
        #     envFrom: &envFrom
        #       - secretRef:
        #         name: &secret hass-secret

        containers:
          main:
            image:
              repository: homeassistant/home-assistant
              tag: 2023.11.0
            env:
              TZ: "{$TIMEZONE}"
            # envFrom: *envFrom
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
            # resources:
            #   requests:
            #     cpu: 48m
            #     memory: 443M
            #   limits:
            #     memory: 709M

    # hostNetwork: true
    # dnsPolicy: ClusterFirstWithHostNet

        # pod:
          # securityContext:
          #   runAsUser: 568
          #   runAsGroup: 568
          #   fsGroup: 568
          #   fsGroupChangePolicy: "OnRootMismatch"
          # securityContext:
          #   runAsUser: 1000
          #   runAsGroup: 1000
          #   fsGroup: 1000
          #   fsGroupChangePolicy: "OnRootMismatch"

    service:
      main:
        ports:
          http:
            port: 8123

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "home-assistant"
          hajimari.io/targetBlank: "true"
        hosts:
          - host: &host "hass.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        # tls:
        #   - hosts:
        #       - *host

    persistence:
      config:
        enabled: true
        storageClass: ceph-block
        accessMode: ReadWriteOnce
        size: 5Gi

    # addons:
    #   codeserver:
    #     enabled: false
    #     image:
    #       repository: ghcr.io/coder/code-server
    #       tag: 4.18.0
    #     env:
    #       TZ: "{$TIMEZONE}"
    #     workingDir: "/config"
    #     args:
    #       - --auth
    #       - "none"
    #       - --user-data-dir
    #       - "/config/.vscode"
    #       - --extensions-dir
    #       - "/config/.vscode"
    #     ingress:
    #       enabled: true
    #       ingressClassName: nginx
    #       annotations:
    #         hajimari.io/enable: "true"
    #         hajimari.io/icon: "microsoft-visual-studio-code"
    #         hajimari.io/targetBlank: "true"
    #       hosts:
    #         - host: &host "hass-code.${SECRET_DOMAIN}"
    #           paths:
    #             - path: /
    #               pathType: Prefix
    #       # tls:
    #       #   - hosts:
    #       #       - *host
    #     volumeMounts:
    #       - name: config
    #         mountPath: /config
