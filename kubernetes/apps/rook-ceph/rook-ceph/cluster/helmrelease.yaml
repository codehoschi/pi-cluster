---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.13.2
      sourceRef:
        kind: HelmRepository
        name: rook-ceph
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    monitoring:
      enabled: true
      createPrometheusRules: true
    toolbox:
      enabled: true
    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true
      osd_class_update_on_start = false
    ingress:
      dashboard:
        ingressClassName: nginx
        host:
          name: &host rook.${SECRET_DOMAIN}
          path: /
    cephClusterSpec:
      network:
        provider: host
        # connections:
        #   requireMsgr2: true
        #   compression:
        #     # TODO: Test out enabling this on next cluster rebuild
        #     enabled: false
      # mgr:
      #   count: 2
      crashCollector:
        disable: false
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
          - name: brix-01
            devices:
              - name: sda3
          - name: brix-02
            devices:
              - name: sda3
          - name: brix-03
            devices:
              - name: sda3
          - name: brix-04
            devices:
              - name: sda3

      resources:
        mgr:
          requests:
            cpu: "125m"
            memory: "512Mi"
          limits:
            memory: "2Gi"
        mon:
          requests:
            cpu: "49m"
            memory: "512Mi"
          limits:
            memory: "1Gi"
        osd:
          requests:
            cpu: "442m"
            memory: "2Gi"
          limits:
            memory: "6Gi"
        mgr-sidecar:
          requests:
            cpu: "49m"
            memory: "128Mi"
          limits:
            memory: "256Mi"
        crashcollector:
          requests:
            cpu: "15m"
            memory: "64Mi"
          limits:
            memory: "64Mi"
        logcollector:
          requests:
            cpu: "100m"
            memory: "100Mi"
          limits:
            memory: "1Gi"
        cleanup:
          requests:
            cpu: "250m"
            memory: "100Mi"
          limits:
            memory: "1Gi"
      # resources:
      #   # mgr:
      #   #   limits:
      #   #     cpu: 500m
      #   #     # memory: 512Mi
      #   #   requests:
      #   #     cpu: 50m
      #   #     # memory: 256Mi
      #   mon:
      #     limits:
      #       cpu: 500m
      #       memory: 1024Mi
      #     requests:
      #       cpu: 150m
      #       memory: 256Mi
      #   osd:
      #     limits:
      #       cpu: 500m
      #       memory: 2048Mi
      #     requests:
      #       cpu: 150m
      #       memory: 256Mi
      #   prepareosd:
      #     limits:
      #       cpu: 1000m
      #       # memory: 400Mi
      #     requests:
      #       cpu: 100m
      #       memory: 200Mi
      #   # mgr-sidecar:
      #   #   limits:
      #   #     cpu: 256m
      #   #     memory: 100Mi
      #   #   requests:
      #   #     cpu: 100m
      #   #     memory: 40Mi
      #   crashcollector:
      #     limits:
      #       cpu: 100m
      #       memory: 220M
      #     requests:
      #       cpu: 15m
      #       memory: 64M
      #   logcollector:
      #     limits:
      #       cpu: "500m"
      #       memory: "1Gi"
      #     requests:
      #       cpu: "100m"
      #       memory: "100Mi"
      #   cleanup:
      #     limits:
      #       cpu: "500m"
      #       memory: "1Gi"
      #     requests:
      #       cpu: "100m"
      #       memory: "100Mi"
      # # resources:
      # #   mgr:
      # #     requests:
      # #       cpu: 250m
      # #       memory: 512Mi
      # #     limits:
      # #       cpu: 1000m
      # #       memory: 2Gi
      # #   mon:
      # #     requests:
      # #       cpu: 500m
      # #       memory: 1Gi
      # #     limits:
      # #       cpu: 2000m
      # #       memory: 4Gi
      # #   osd:
      # #     requests:
      # #       cpu: 500m
      # #       memory: 4Gi
      # #     limits:
      # #       cpu: 2000m
      # #       memory: 8Gi

    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete
    cephFileSystems:
      - name: ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
              name: data0
          metadataServer:
            activeCount: 1
            activeStandby: true
            resources:
              requests:
                cpu: 1000m
                memory: 4Gi
              limits:
                memory: 4Gi
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          pool: data0
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephFileSystemVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-filesystem
      isDefault: false
      deletionPolicy: Delete
    cephObjectStores: []
    # cephObjectStores:
    #   - name: ceph-objectstore
    #     spec:
    #       metadataPool:
    #         failureDomain: host
    #         replicated:
    #           size: 3
    #       dataPool:
    #         failureDomain: host
    #         erasureCoded:
    #           dataChunks: 2
    #           codingChunks: 1
    #       preservePoolsOnDelete: true
    #       gateway:
    #         port: 80
    #         resources:
    #           requests:
    #             cpu: 1000m
    #             memory: 1Gi
    #           limits:
    #             memory: 2Gi
    #         instances: 1
    #       healthCheck:
    #         bucket:
    #           interval: 60s
    #     storageClass:
    #       enabled: true
    #       name: ceph-bucket
    #       reclaimPolicy: Delete
    #       parameters:
    #         region: eu-central-1
