---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app lldap
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      lldap:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/codehoschi/postgres-init
              tag: 15.4@sha256:17620a5e514c4518ac25f75915afa45a82361bce2f945bdadac7f1c33f82db91
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: lldap-secret

        containers:
          app:
            image:
              repository: ghcr.io/lldap/lldap
              tag: v0.5.0
            env:
              TZ: ${TIMEZONE}
              LLDAP_HTTP_PORT: &port 80
              LLDAP_HTTP_URL: https://lldap.${SECRET_DOMAIN}
              LLDAP_LDAP_PORT: &ldapPort 389
            envFrom: *envFrom
            # resources:
            #   requests:
            #     cpu: 100m
            #     memory: 100Mi
            #   limits:
            #     memory: 500Mi

        pod:
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app

    service:
      app:
        controller: lldap
        ports:
          http:
            port: *port
          ldap:
            enabled: true
            port: *ldapPort

    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          hajimari.io/group: "Apps"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "LLDAP"
          gethomepage.dev/description: "Light LDAP implementation"
          gethomepage.dev/group: "Apps"
          gethomepage.dev/icon: "mdi-account-group-#cf2e2e"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http

    persistence:
      data:
        enabled: true
        type: emptyDir
