---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: authentik
  namespace: default
spec:
  # refreshInterval: 5m
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault-kv
  target:
    name: authentik-secret
    creationPolicy: Owner
    deletionPolicy: Delete
    template:
      engineVersion: v2
      data:
        # App
        AUTHENTIK_SECRET_KEY: "{{ .AUTHENTIK_SECRET_KEY }}"
        AUTHENTIK_POSTGRESQL__HOST: &dbHost postgres-v16-v1-rw.database.svc.cluster.local
        AUTHENTIK_POSTGRESQL__NAME: &dbName "{{ .AUTHENTIK_POSTGRESQL__NAME }}"
        AUTHENTIK_POSTGRESQL__USER: &dbUser "{{ .AUTHENTIK_POSTGRESQL__USER }}"
        AUTHENTIK_POSTGRESQL__PASSWORD: &dbPass "{{ .AUTHENTIK_POSTGRESQL__PASSWORD }}"
        # AUTHENTIK_EMAIL__HOST: "{{ .AUTHENTIK_EMAIL__HOST }}"
        # AUTHENTIK_EMAIL__USERNAME: "{{ .AUTHENTIK_EMAIL__USERNAME }}"
        # AUTHENTIK_EMAIL__PASSWORD: "{{ .AUTHENTIK_EMAIL__PASSWORD }}"
        # AUTHENTIK_EMAIL__FROM: "{{ .AUTHENTIK_EMAIL__FROM }}"
        # Redis
        AUTHENTIK_REDIS__PASSWORD: "{{ .REDIS_PW }}"
        # Postgres Init
        INIT_POSTGRES_DBNAME: *dbName
        INIT_POSTGRES_HOST: *dbHost
        INIT_POSTGRES_USER: *dbUser
        INIT_POSTGRES_PASS: *dbPass
        INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"
  dataFrom:
    - extract:
        key: authentik
    - extract:
        key: redis
    - extract:
        key: postgres
