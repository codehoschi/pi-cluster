---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app prowlarr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/codehoschi/postgres-init
              tag: 15.4@sha256:17620a5e514c4518ac25f75915afa45a82361bce2f945bdadac7f1c33f82db91
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: prowlarr-secret

        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/prowlarr-develop
              tag: 1.14.3.4333@sha256:60f146b93e846e543cac0e8d74412c45cd0112a0793ad48c8ae54125f6f990fe
            env:
              TZ: ${TIMEZONE}
              PROWLARR__INSTANCE_NAME: Prowlarr
              PROWLARR__PORT: &port 80
              PROWLARR__LOG_LEVEL: info
              PROWLARR__AUTHENTICATION_METHOD: External
              PROWLARR__THEME: dark
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            # resources:
            #   requests:
            #     cpu: 10m
            #     memory: 100Mi
            #   limits:
            #     memory: 500Mi

        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http

    persistence:
      config:
        enabled: true
        type: emptyDir
