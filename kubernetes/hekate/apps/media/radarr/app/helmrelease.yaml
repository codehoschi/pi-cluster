---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      radarr:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/codehoschi/postgres-init
              tag: 15.4@sha256:17620a5e514c4518ac25f75915afa45a82361bce2f945bdadac7f1c33f82db91
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: radarr-secret

        containers:
          app:
            image:
              # repository: lscr.io/linuxserver/radarr
              # tag: 4.7.5
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.12.0.9255@sha256:87c788eb150218172c951e8f37ec60dbc5a3033c909f1467c3bbee88e5a51f3b
            env:
              TZ: ${TIMEZONE}
              RADARR__AUTHENTICATION_METHOD: External
              RADARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              RADARR__INSTANCE_NAME: Radarr
              RADARR__PORT: &port 80
              RADARR__LOG_LEVEL: info
              RADARR__THEME: dark
            envFrom:
              *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            # resources:
            #   requests:
            #     cpu: 10m
            #     memory: 250Mi
            #   limits:
            #     memory: 2000Mi

        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch

    service:
      app:
        controller: radarr
        ports:
          http:
            port: *port

    ingress:
      app:
        enabled: true
        className: nginx
        annotations:
          # nginx.ingress.kubernetes.io/configuration-snippet: |
          #   proxy_set_header Accept-Encoding "";
          #   sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="http://theme-park.${SECRET_DOMAIN}/css/base/radarr/nord.css"></head>';
          #   sub_filter_once on;
          # nginx.ingress.kubernetes.io/whitelist-source-range: |
          #   10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Radarr"
          gethomepage.dev/description: "Movie organizer/manager"
          gethomepage.dev/group: "Media"
          gethomepage.dev/icon: "radarr.svg"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        enabled: true
        existingClaim: *app
      media:
        enabled: true
        existingClaim: nfs-synnas-media-pvc
        globalMounts:
          - path: /media
