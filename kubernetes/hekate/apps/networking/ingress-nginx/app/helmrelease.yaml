---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ingress-nginx
spec:
  interval: 30m
  chart:
    spec:
      chart: ingress-nginx
      version: 4.11.3
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      extraEnvs:
        - name: TZ
          value: "${TIMEZONE}"
      service:
        annotations:
          io.cilium/lb-ipam-ips: ${LB_NGINX}
        # # externalTrafficPolicy: Local
        # externalTrafficPolicy: Cluster
      publishService:
        enabled: true
      ingressClassResource:
        default: true
      allowSnippetAnnotations: true
      config:
        client-body-buffer-size: 100M
        client-body-timeout: 120
        client-header-timeout: 120
        custom-http-errors: 400,401,403,404,500,502,503,504
        enable-brotli: "true"
        hsts-max-age: 31449600
        keep-alive-requests: 10000
        keep-alive: 120
        force-ssl-redirect: "true"
        ssl-protocols: TLSv1.3 TLSv1.2
        forwarded-for-header: "CF-Connecting-IP"
        use-forwarded-headers: "true"
        proxy-body-size: 0
        proxy-buffer-size: 16k
        log-format-escape-json: "true"
        log-format-upstream: >-
          {"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr",
          "x_forwarded_for": "$proxy_add_x_forwarded_for", "request_id": "$req_id",
          "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time,
          "status": $status, "vhost": "$host", "request_proto": "$server_protocol",
          "path": "$uri", "request_query": "$args", "request_length": $request_length,
          "duration": $request_time,"method": "$request_method", "http_referrer": "$http_referer",
          "http_user_agent": "$http_user_agent"}
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespace: networking
          namespaceSelector:
            any: true
          # additionalLabels:
          #   release: kube-prometheus-stack-prometheus
      extraArgs:
        default-ssl-certificate: "networking/${SECRET_DOMAIN/./-}-production-tls"
      # podAnnotations:
      #   configmap.reloader.stakater.com/reload: cloudflare-networks
      # resources:
      #   requests:
      #     cpu: 49m
      #     memory: 273M
      #   limits:
      #     cpu: 49m
      #     memory: 273M
    defaultBackend:
      enabled: true
      image:
        repository: ghcr.io/tarampampam/error-pages
        tag: 3.3.0
      extraEnvs:
        - name: TEMPLATE_NAME
          value: lost-in-space
        - name: SHOW_DETAILS
          value: "false"
  # valuesFrom:
  #   # Cloudflare Networks
  #   # https://www.cloudflare.com/ips/
  #   - targetPath: controller.config.proxy-real-ip-cidr
  #     kind: ConfigMap
  #     name: cloudflare-networks
  #     valuesKey: cloudflare-networks.txt
