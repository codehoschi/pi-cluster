---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: openproject
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault-kv
  target:
    name: openproject-secret
    creationPolicy: Owner
    deletionPolicy: Delete
    template:
      engineVersion: v2
      data:
        # App
        OPENPROJECT_DB_USER_PASSWORD: "{{ .OPENPROJECT_DB_USER_PASSWORD }}"
        OPENPROJECT_DB_URL: |-
          postgres://{{ .OPENPROJECT_DB_USER }}:{{ .OPENPROJECT_DB_USER_PASSWORD }}@postgres-v16-rw.database.svc.cluster.local/openproject
        OPENPROJECT_SEED__ADMIN__USER__NAME: "{{ .OPENPROJECT_ADMIN_USER_NAME }}"
        OPENPROJECT_SEED__ADMIN__USER__PASSWORD: "{{ .OPENPROJECT_ADMIN_PASSWORD }}"
        #SAML SSO
        # Name of the provider, leave this at saml unless you use multiple providers
        OPENPROJECT_SAML_SAML_NAME: "saml"

        # The name that will be display in the login button
        OPENPROJECT_SAML_SAML_DISPLAY__NAME: "SSO"

        # The callback within OpenProject that your idP should redirect to
        OPENPROJECT_SAML_SAML_ASSERTION__CONSUMER__SERVICE__URL: "https://projects.k8s.lmwpva.net/auth/saml/callback"

        # The SAML issuer string that OpenProject will call your idP with
        OPENPROJECT_SAML_SAML_ISSUER: "https://projects.k8s.lmwpva.net"

        # IF your SSL certificate on your SSO is not trusted on this machine, you need to add it here in ONE line
        ### one liner to generate certificate in ONE line
        ### awk 'NF {sub(/\r/, ""); printf "%s\\n",$0;}' <yourcert.pem>
        #idp_cert: "-----BEGIN CERTIFICATE-----\n ..... SSL CERTIFICATE HERE ...-----END CERTIFICATE-----\n"
        # Otherwise, the certificate fingerprint must be added
        # Either `OPENPROJECT_SAML_SAML_IDP__CERT` or `OPENPROJECT_SAML_SAML_IDP__CERT__FINGERPRINT` must be present!
        # OPENPROJECT_SAML_SAML_IDP__CERT: "-----BEGIN CERTIFICATE-----<cert one liner>-----END CERTIFICATE-----"
        # If you  this environment variable through a shell, you will need to run it through C style quoting to preserve the newline
        # Otherwise you will get an internal error with this log line "PEM_read_bio_X509: bad base64 decode"
        # OPENPROJECT_SAML_SAML_IDP__CERT=$'-----BEGIN CERTIFICATE-----<cert one liner>-----END CERTIFICATE-----'

        OPENPROJECT_SAML_SAML_IDP__CERT__FINGERPRINT: "d3:ba:ad:98:d7:06:b6:b0:ba:e4:4c:16:72:e5:0a:e0:5b:23:4f:95"
        # Replace with your single sign on URL, the exact value depends on your idP implementation
        OPENPROJECT_SAML_SAML_IDP__SSO__TARGET__URL: "https://auth.k8s.lmwpva.net/application/saml/openproject/sso/binding/post/"

        # (Optional) Replace with your redirect flow single sign out URL that we should redirect to
        OPENPROJECT_SAML_SAML_IDP__SLO__TARGET__URL: "https://auth.k8s.lmwpva.net/application/saml/openproject/slo/binding/post/"

        # Which SAMLAttribute we should look for for the corresponding attributes of OpenProject
        # can be a string or URI/URN depending on our idP format
        OPENPROJECT_SAML_SAML_ATTRIBUTE__STATEMENTS_EMAIL: "[mail]"
        OPENPROJECT_SAML_SAML_ATTRIBUTE__STATEMENTS_LOGIN: "[mail]"
        OPENPROJECT_SAML_SAML_ATTRIBUTE__STATEMENTS_FIRST__NAME: "[givenName]"
        OPENPROJECT_SAML_SAML_ATTRIBUTE__STATEMENTS_LAST__NAME: "[sn]"
        # You can also specify multiple attributes, the first found value will be used. Example:
        # OPENPROJECT_SAML_SAML_ATTRIBUTE__STATEMENTS_LOGIN="['mail', 'samAccountName', 'uid']"
        # Postgres Init
        INIT_POSTGRES_DBNAME: openproject
        INIT_POSTGRES_HOST: postgres-v16-rw.database.svc.cluster.local
        INIT_POSTGRES_USER: "{{ .OPENPROJECT_DB_USER }}"
        INIT_POSTGRES_PASS: "{{ .OPENPROJECT_DB_USER_PASSWORD }}"
        INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"
  dataFrom:
    - extract:
        key: openproject
    - extract:
        key: postgres
